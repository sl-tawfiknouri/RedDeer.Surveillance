@page
@using Surveillance.Auditing.DataLayer.Processes
@using Utilities.Extensions
@model RedDeer.Surveillance.App.Pages.DashboardModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="Refresh" content="10">
    <title>Dashboard</title>
    
    <style>
import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700,300,100);

body {
  background-color: #3e94ec;
  font-family: "Roboto", helvetica, arial, sans-serif;
  font-size: 16px;
  font-weight: 400;
  text-rendering: optimizeLegibility;
}

div.table-title {
   display: block;
  margin: auto;
  max-width: 600px;
  padding:5px;
  width: 100%;
}

.table-title h3 {
   color: #fafafa;
   font-size: 30px;
   font-weight: 400;
   font-style:normal;
   font-family: "Roboto", helvetica, arial, sans-serif;
   text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.1);
   text-transform:uppercase;
}


/*** Table Styles **/

.table-fill {
  background: white;
  border-radius:3px;
  border-collapse: collapse;
  height: 320px;
  margin: auto;
  max-width: 600px;
  padding:5px;
  width: 100%;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
  animation: float 5s infinite;
}

th {
  color:#D5DDE5;;
  background:#1b1e24;
  border-bottom:4px solid #9ea7af;
  border-right: 1px solid #343a45;
  font-size:23px;
  font-weight: 100;
  padding:24px;
  text-align:left;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  vertical-align:middle;
}

th:first-child {
  border-top-left-radius:3px;
}

th:last-child {
  border-top-right-radius:3px;
  border-right:none;
}

tr {
  border-top: 1px solid #C1C3D1;
  border-bottom-: 1px solid #C1C3D1;
  color:#666B85;
  font-size:16px;
  font-weight:normal;
  text-shadow: 0 1px 1px rgba(256, 256, 256, 0.1);
}

tr:hover td {
  background:#4E5066;
  color:#FFFFFF;
  border-top: 1px solid #22262e;
}

tr:first-child {
  border-top:none;
}

tr:last-child {
  border-bottom:none;
}

tr:nth-child(odd) td {
  background:#EBEBEB;
}

tr:nth-child(odd):hover td {
  background:#4E5066;
}

tr:last-child td:first-child {
  border-bottom-left-radius:3px;
}

tr:last-child td:last-child {
  border-bottom-right-radius:3px;
}

td {
  background:#FFFFFF;
  padding:20px;
  text-align:left;
  vertical-align:middle;
  font-weight:300;
  font-size:18px;
  text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.1);
  border-right: 1px solid #C1C3D1;
}

td:last-child {
  border-right: 0px;
}

th.text-left {
  text-align: left;
}

th.text-center {
  text-align: center;
}

th.text-right {
  text-align: right;
}

td.text-left {
  text-align: left;
}

td.text-center {
  text-align: center;
}

td.text-right {
  text-align: right;
}

table {
    float: none;
}

    </style>

</head>
<body>
    <p>
        <h1 style="text-align: center">
            SURVEILLANCE SERVICE DASHBOARD
        </h1>
    </p>
    <hr />
    

@if (!Model.ApiHeartbeat)
{
    <h1 style="text-align: center; color: red">
        SURVEILLANCE SERVICE UNABLE TO ACCESS CLIENT SERVICE API
    </h1>
}
    
<h1>Process Information</h1>
<table>
    <tr>
        <th>Property</th>
        <th>Value</th>
    </tr>
    <tr><td>Process Id</td><td>@Model.ProcessId</td></tr>
    <tr><td>Process Machine Name</td><td>@Model.ProcessMachineName</td></tr>
    <tr><td>Process Start Time</td><td>@Model.ProcessStartTime</td></tr>
    <tr><td>Process Peak Working Set</td><td>@Model.ProcessPeakWorkingSet</td></tr>
    <tr><td>Process Processor Time</td><td>@Model.ProcessProcessorTime</td></tr>
</table>
<hr />

<h1>System Processes</h1>
    <table>
        <tr>
            <th>Id</th>
            <th>Heartbeat</th>
            <th>Instance Initiated</th>
            <th>Machine Id</th>
            <th>Process Id</th>
            <th>Process Type</th>
        </tr>
        @foreach (var row in Model.SystemProcesses)
        {
            <tr>
                <td>@row.Id</td>
                <td>@row.Heartbeat</td>
                <td>@row.InstanceInitiated</td>
                <td>@row.MachineId</td>
                <td>@row.ProcessId</td>
                <td>@row.SystemProcessType.ToString()</td>
            </tr>
        }
    </table>
    <hr />

    <h1>System Processes Operation</h1>
    <table>
        <tr>
            <th>Id</th>
            <th>System Process Id</th>
            <th>Operation Start</th>
            <th>Operation End</th>
            <th>Operation State</th>
        </tr>
        @foreach (var row in Model.SystemProcessOperation)
        {
            <tr>
                <td>@row.Id</td>
                <td>@row.SystemProcessId</td>
                <td>@row.OperationStart</td>
                <td>@row.OperationEnd</td>
                <td>@row.OperationState.GetDescription()</td>
            </tr>
        }
    </table>
    <hr />

<h1>Rule Distributions</h1>
<table>
    <tr>
        <th>Id</th>
        <th>Op Id</th>
        <th>Schedule Start</th>
        <th>Schedule End</th>
        <th>Rules</th>
    </tr>

    @foreach (var row in Model.SystemProcessDistribute)
    {
        <tr>
            <td>@row.Id</td>
            <td>@row.SystemProcessOperationId</td>
            <td>@row.ScheduleRuleInitialStart</td>
            <td>@row.ScheduleRuleInitialEnd</td>
            <td>@row.RulesDistributed</td>
        </tr>
    }

</table>
<hr />

<h1>Rule Runs</h1>
    <table>
        <tr>
            <th>Id</th>
            <th>Op Id</th>
            <th>Schedule Start</th>
            <th>Schedule End</th>
            <th>Rule Version</th>
            <th>Rule Description</th>
        </tr>

        @foreach (var row in Model.SystemProcessRuleRun)
        {
            <tr>
                <td>@row.Id</td>
                <td>@row.SystemProcessOperationId</td>
                <td>@row.ScheduleRuleStart</td>
                <td>@row.ScheduleRuleEnd</td>
                <td>@row.RuleVersion</td>
                <td>@row.RuleDescription</td>
            </tr>
        }

    </table>
<hr />

<h1>File Uploads</h1>
<table>
    <tr>
        <th>Id</th>
        <th>Op Id</th>
        <th>File Type</th>
        <th>File Path</th>
    </tr>

    @foreach (var row in Model.SystemProcessUploadFile)
    {
        <tr>
            <td>@row.Id</td>
            <td>@row.SystemProcessOperationId</td>
            <td>@(((SystemProcessOperationUploadFileType)row.FileType).ToString())</td>
            <td>@row.FilePath</td>
        </tr>
    }

</table>
<hr />

<h1>Audit Exceptions</h1>
<table>
    <tr>
        <th>Id</th>
        <th>System Process Id</th>
        <th>Operation Id</th>
        <th>Rule Run Id</th>
        <th>Distribute Id</th>
        <th>File Upload Id</th>
        <th>Exception</th>
        <th>Inner Exception</th>
        <th>Stack Trace</th>
    </tr>
    @foreach (var row in Model.Exceptions)
    {
        <tr>
            <td>@row.Id</td>
            <td>@row.SystemProcessId</td>
            <td>@row.SystemProcessOperationId</td>
            <td>@row.SystemProcessOperationRuleRunId</td>
            <td>@row.SystemProcessOperationDistributeRuleId</td>
            <td>@row.SystemProcessOperationUploadFileRuleId</td>
            <td>@row.ExceptionMessage</td>
            <td>@row.InnerExceptionMessage</td>
            <td>@row.StackTrace</td>
        </tr>
    }

</table>
<hr />

</body>
</html>
