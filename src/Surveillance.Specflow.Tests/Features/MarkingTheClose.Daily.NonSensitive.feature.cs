// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Surveillance.Specflow.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MarkingTheClose Daily Non Sensitive Parameters")]
    [NUnit.Framework.CategoryAttribute("markingtheclose")]
    [NUnit.Framework.CategoryAttribute("markingtheclosedaily")]
    [NUnit.Framework.CategoryAttribute("markingtheclosedailynonsensitive")]
    public partial class MarkingTheCloseDailyNonSensitiveParametersFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MarkingTheClose.Daily.NonSensitive.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MarkingTheClose Daily Non Sensitive Parameters", "\tIn order to meet MAR compliance requirements\r\n\tI need to be able to detect when " +
                    "traders are executing trades\r\n\ttowards the market closure time at an unusually\r\n" +
                    "\thigh volume in order to extract supernormal profits", ProgrammingLanguage.CSharp, new string[] {
                        "markingtheclose",
                        "markingtheclosedaily",
                        "markingtheclosedailynonsensitive"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 10
#line hidden
            TechTalk.SpecFlow.Table table477 = new TechTalk.SpecFlow.Table(new string[] {
                        "WindowHours",
                        "PercentageThresholdDailyVolume",
                        "PercentageThresholdWindowVolume"});
            table477.AddRow(new string[] {
                        "1",
                        "0.5",
                        ""});
#line 11
   testRunner.Given("I have the marking the close rule parameter values", ((string)(null)), table477, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Empty Universe yields no alerts")]
        public virtual void EmptyUniverseYieldsNoAlerts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Empty Universe yields no alerts", null, ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table478 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "OrderId",
                        "PlacedDate",
                        "FilledDate",
                        "Type",
                        "Direction",
                        "Currency",
                        "LimitPrice",
                        "AverageFillPrice",
                        "OrderedVolume",
                        "FilledVolume"});
#line 16
   testRunner.Given("I have the orders for a universe from 01/01/2018 to 01/05/2018 :", ((string)(null)), table478, "Given ");
#line 18
         testRunner.When("I run the marking the close rule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
   testRunner.Then("I will have 0 marking the close alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Marking the close just out of window raises 0 alerts")]
        public virtual void MarkingTheCloseJustOutOfWindowRaises0Alerts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marking the close just out of window raises 0 alerts", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table479 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "OrderId",
                        "PlacedDate",
                        "CancelledDate",
                        "Type",
                        "Direction",
                        "Currency",
                        "LimitPrice",
                        "AverageFillPrice",
                        "OrderedVolume",
                        "FilledVolume"});
            table479.AddRow(new string[] {
                        "Barclays",
                        "1",
                        "01/01/2019 14:59:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "500",
                        "500"});
            table479.AddRow(new string[] {
                        "Barclays",
                        "2",
                        "01/01/2019 14:59:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "500",
                        "500"});
#line 22
  testRunner.Given("I have the orders for a universe from 01/01/2019 to 01/01/2019 :", ((string)(null)), table479, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table480 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "Epoch",
                        "OpenPrice",
                        "ClosePrice",
                        "HighIntradayPrice",
                        "LowIntradayPrice",
                        "ListedSecurities",
                        "MarketCap",
                        "DailyVolume",
                        "Currency"});
            table480.AddRow(new string[] {
                        "Barclays",
                        "01/01/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
            table480.AddRow(new string[] {
                        "Barclays",
                        "01/02/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
#line 26
  testRunner.And("With the interday market data :", ((string)(null)), table480, "And ");
#line 30
   testRunner.When("I run the marking the close rule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
   testRunner.Then("I will have 0 marking the close alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Marking the close raises 1 alerts")]
        public virtual void MarkingTheCloseRaises1Alerts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marking the close raises 1 alerts", null, ((string[])(null)));
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table481 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "OrderId",
                        "PlacedDate",
                        "CancelledDate",
                        "Type",
                        "Direction",
                        "Currency",
                        "LimitPrice",
                        "AverageFillPrice",
                        "OrderedVolume",
                        "FilledVolume"});
            table481.AddRow(new string[] {
                        "Barclays",
                        "1",
                        "01/01/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "2500",
                        "2500"});
            table481.AddRow(new string[] {
                        "Barclays",
                        "2",
                        "01/01/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "2500",
                        "2500"});
#line 34
  testRunner.Given("I have the orders for a universe from 01/01/2019 to 01/01/2019 :", ((string)(null)), table481, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table482 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "Epoch",
                        "OpenPrice",
                        "ClosePrice",
                        "HighIntradayPrice",
                        "LowIntradayPrice",
                        "ListedSecurities",
                        "MarketCap",
                        "DailyVolume",
                        "Currency"});
            table482.AddRow(new string[] {
                        "Barclays",
                        "01/01/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
            table482.AddRow(new string[] {
                        "Barclays",
                        "01/02/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
#line 38
  testRunner.And("With the interday market data :", ((string)(null)), table482, "And ");
#line 42
   testRunner.When("I run the marking the close rule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
   testRunner.Then("I will have 1 marking the close alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Marking the close raises 1 alerts for nasdaq")]
        public virtual void MarkingTheCloseRaises1AlertsForNasdaq()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marking the close raises 1 alerts for nasdaq", null, ((string[])(null)));
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table483 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "OrderId",
                        "PlacedDate",
                        "CancelledDate",
                        "Type",
                        "Direction",
                        "Currency",
                        "LimitPrice",
                        "AverageFillPrice",
                        "OrderedVolume",
                        "FilledVolume"});
            table483.AddRow(new string[] {
                        "Micron",
                        "1",
                        "01/01/2019 22:35:00",
                        "",
                        "Market",
                        "Buy",
                        "USD",
                        "",
                        "",
                        "2500",
                        "2500"});
            table483.AddRow(new string[] {
                        "Micron",
                        "2",
                        "01/01/2019 22:35:00",
                        "",
                        "Market",
                        "Buy",
                        "USD",
                        "",
                        "",
                        "2500",
                        "2500"});
#line 46
  testRunner.Given("I have the orders for a universe from 01/01/2019 to 01/01/2019 :", ((string)(null)), table483, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table484 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "Epoch",
                        "OpenPrice",
                        "ClosePrice",
                        "HighIntradayPrice",
                        "LowIntradayPrice",
                        "ListedSecurities",
                        "MarketCap",
                        "DailyVolume",
                        "Currency"});
            table484.AddRow(new string[] {
                        "Micron",
                        "01/01/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "USD"});
            table484.AddRow(new string[] {
                        "Micron",
                        "01/02/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "USD"});
#line 50
  testRunner.And("With the interday market data :", ((string)(null)), table484, "And ");
#line 54
   testRunner.When("I run the marking the close rule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
   testRunner.Then("I will have 1 marking the close alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Marking the close raises 2 alerts for differnet days")]
        public virtual void MarkingTheCloseRaises2AlertsForDiffernetDays()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marking the close raises 2 alerts for differnet days", null, ((string[])(null)));
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table485 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "OrderId",
                        "PlacedDate",
                        "CancelledDate",
                        "Type",
                        "Direction",
                        "Currency",
                        "LimitPrice",
                        "AverageFillPrice",
                        "OrderedVolume",
                        "FilledVolume"});
            table485.AddRow(new string[] {
                        "Barclays",
                        "1",
                        "01/01/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "2500",
                        "2500"});
            table485.AddRow(new string[] {
                        "Barclays",
                        "2",
                        "01/01/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "2500",
                        "2500"});
            table485.AddRow(new string[] {
                        "Barclays",
                        "3",
                        "01/02/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "2500",
                        "2500"});
            table485.AddRow(new string[] {
                        "Barclays",
                        "4",
                        "01/02/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "2500",
                        "2500"});
#line 58
  testRunner.Given("I have the orders for a universe from 01/01/2019 to 01/02/2019 :", ((string)(null)), table485, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table486 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "Epoch",
                        "OpenPrice",
                        "ClosePrice",
                        "HighIntradayPrice",
                        "LowIntradayPrice",
                        "ListedSecurities",
                        "MarketCap",
                        "DailyVolume",
                        "Currency"});
            table486.AddRow(new string[] {
                        "Barclays",
                        "01/01/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
            table486.AddRow(new string[] {
                        "Barclays",
                        "01/02/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
#line 64
  testRunner.And("With the interday market data :", ((string)(null)), table486, "And ");
#line 68
   testRunner.When("I run the marking the close rule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
   testRunner.Then("I will have 2 marking the close alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Marking the close raises 0 alerts for differnet days")]
        public virtual void MarkingTheCloseRaises0AlertsForDiffernetDays()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marking the close raises 0 alerts for differnet days", null, ((string[])(null)));
#line 71
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table487 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "OrderId",
                        "PlacedDate",
                        "CancelledDate",
                        "Type",
                        "Direction",
                        "Currency",
                        "LimitPrice",
                        "AverageFillPrice",
                        "OrderedVolume",
                        "FilledVolume"});
            table487.AddRow(new string[] {
                        "Barclays",
                        "1",
                        "01/01/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "50",
                        "50"});
            table487.AddRow(new string[] {
                        "Barclays",
                        "2",
                        "01/01/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "50",
                        "50"});
            table487.AddRow(new string[] {
                        "Barclays",
                        "3",
                        "01/02/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "50",
                        "50"});
            table487.AddRow(new string[] {
                        "Barclays",
                        "4",
                        "01/02/2019 15:35:00",
                        "",
                        "Market",
                        "Buy",
                        "GBX",
                        "",
                        "",
                        "50",
                        "50"});
#line 72
  testRunner.Given("I have the orders for a universe from 01/01/2019 to 01/02/2019 :", ((string)(null)), table487, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table488 = new TechTalk.SpecFlow.Table(new string[] {
                        "SecurityName",
                        "Epoch",
                        "OpenPrice",
                        "ClosePrice",
                        "HighIntradayPrice",
                        "LowIntradayPrice",
                        "ListedSecurities",
                        "MarketCap",
                        "DailyVolume",
                        "Currency"});
            table488.AddRow(new string[] {
                        "Barclays",
                        "01/01/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
            table488.AddRow(new string[] {
                        "Barclays",
                        "01/02/2019",
                        "10",
                        "11",
                        "11.5",
                        "10",
                        "10",
                        "1000000",
                        "10000",
                        "GBX"});
#line 78
  testRunner.And("With the interday market data :", ((string)(null)), table488, "And ");
#line 82
   testRunner.When("I run the marking the close rule", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
   testRunner.Then("I will have 0 marking the close alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
