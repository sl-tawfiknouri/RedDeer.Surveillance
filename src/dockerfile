FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS build

ARG NEXUSAPIKEY

WORKDIR /app

# copy csproj and restore as distinct layers

COPY TestHarness/App/*.csproj ./TestHarness/App/
COPY TestHarness/TestHarness/*.csproj ./TestHarness/TestHarness/
COPY SharedKernel.Files/*.csproj ./SharedKernel.Files/
COPY Infrastructure.Network/*.csproj ./Infrastructure.Network/
COPY Domain.Surveillance/*.csproj ./Domain.Surveillance/
COPY Domain.Core/*.csproj ./Domain.Core/

WORKDIR /app/TestHarness/App
CMD nuget setapikey $NEXUSAPIKEY -source http://nexus.reddeer.local/repository/nuget-hosted
RUN dotnet restore -s http://nexus.reddeer.local/repository/nuget-hosted -s https://api.nuget.org/v3/index.json

# copy and publish app and libraries
WORKDIR /app/
COPY TestHarness/. ./TestHarness/
COPY SharedKernel.Files/. ./SharedKernel.Files/
COPY Infrastructure.Network/. ./Infrastructure.Network/
COPY Domain.Surveillance/. ./Domain.Surveillance/
COPY Domain.Core/. ./Domain.Core/

WORKDIR /app/TestHarness/App
RUN dotnet publish -c Release -o out -r ubuntu-x64

FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS runtime
# FROM mcr.microsoft.com/dotnet/core/runtime:2.2 AS runtime
WORKDIR /app

RUN apt-get update

RUN apt-get update && \
    apt-get -qqy install \
        curl \
        unzip \
        gettext \
        sudo && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN uname -m

COPY --from=build /app/TestHarness/App/out ./
RUN chmod 777 ./TestHarness.App.dll
RUN apt-get update
RUN apt-get install libunwind8

CMD ["dotnet", "TestHarness.App.dll"]


